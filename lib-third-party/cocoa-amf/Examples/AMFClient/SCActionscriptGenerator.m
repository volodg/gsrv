//
//  SCActionscriptGenerator.m
//  CocoaAMF
//
//  Created by Marc Bauer on 02.05.09.
//  Copyright 2009 nesiumdotcom. All rights reserved.
//

#import "SCActionscriptGenerator.h"

@interface SCActionscriptGenerator (Private)
- (NSString *)_asTypeForNode:(AMFDebugDataNode *)node;
@end


@implementation SCActionscriptGenerator

- (NSString *)stubCodeForDataNode:(AMFDebugDataNode *)node
{
	NSString *packageName = @"";
	NSString *name = node.objectClassName;
	name = [name stringByReplacingOccurrencesOfString:@"::" withString:@"."];
	NSArray *parts = [name componentsSeparatedByString:@"."];
	NSString *className = [parts lastObject];
	if ([parts count] > 1)
	{
		packageName = [[parts subarrayWithRange:(NSRange){0, [parts count] - 1}] 
			componentsJoinedByString:@"."];
	}

	NSMutableArray *ivars = [NSMutableArray array];
	NSMutableArray *properties = [NSMutableArray array];
	for (AMFDebugDataNode *subnode in node.children)
	{
		[ivars addObject:[NSString stringWithFormat:@"\t\tpublic var %@:%@;", subnode.name, 
			[self _asTypeForNode:subnode]]];
		[properties addObject:[NSString stringWithFormat:@"%@: ' + %@", subnode.name, subnode.name]];
	}
	NSString *ivarsString = [ivars componentsJoinedByString:@"\n"];
	NSString *propertiesString = [NSString stringWithFormat:@"'[%@] %@", 
		className, [properties componentsJoinedByString:@" + ' "]];

	return [NSString stringWithFormat:@"\
// Generated by CocoaAMF\n\
\n\
package %@\n\
{\n\
\n\
	[RemoteClass(alias=\"%@\")]\n\
	public class %@\n\
	{\n\
	\n\
%@\n\
	\n\
	\n\
	\n\
		public function %@() {}\n\
		\n\
		\n\
		public function toString():String\n\
		{\n\
			return %@;\n\
		}\n\
	}\n\
}", packageName, node.objectClassName, className, ivarsString, className, propertiesString];
}

- (NSString *)_asTypeForNode:(AMFDebugDataNode *)node
{
	if (node.objectClassName != nil)
		return node.objectClassName;

	if (node.version == kAMF0Version)
	{
		switch (node.type)
		{
			case kAMF0NumberType:
				return @"Number";
			case kAMF0BooleanType:
				return @"Boolean";
			case kAMF0StringType:
			case kAMF0LongStringType:
				return @"String";
			case kAMF0ObjectType:
				return @"Object";
			case kAMF0MovieClipType:
				return @"MovieClip";
			case kAMF0StrictArrayType:
				return @"Array";
			case kAMF0DateType:
				return @"Date";
			case kAMF0XMLObjectType:
				return @"XML";
			case kAMF0ECMAArrayType:
			case kAMF0TypedObjectType:
				return @"Object";
		}
	}
	else
	{
		switch (node.type)
		{
			case kAMF3FalseType:
			case kAMF3TrueType:
				return @"Boolean";
			case kAMF3IntegerType:
			case kAMF3DoubleType:
				return @"Number";
			case kAMF3StringType:
				return @"String";
			case kAMF3XMLDocType:
				return @"XMLDocument";
			case kAMF3DateType:
				return @"Date";
			case kAMF3ArrayType:
				return @"Array";
			case kAMF3ObjectType:
				return @"Object";
			case kAMF3XMLType:
				return @"XML";
			case kAMF3ByteArrayType:
				return @"ByteArray";
		}
	}
	return @"*";
}

@end